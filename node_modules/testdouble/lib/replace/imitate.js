// Generated by CoffeeScript 1.11.1
(function() {
  var _, isConstructor, log, object, stringifyAnything, tdFunction;

  _ = require('../util/lodash-wrap');

  object = require('../object');

  tdFunction = require('../function');

  log = require('../log');

  isConstructor = require('./is-constructor');

  stringifyAnything = require('../stringify/anything');

  module.exports = function(realThing, optionalName) {
    if (isConstructor(realThing) || _.isPlainObject(realThing)) {
      return object(realThing);
    } else if (_.isFunction(realThing)) {
      return tdFunction((realThing != null ? realThing.name : void 0) ? realThing.name : optionalName);
    } else {
      return log.error("td.replace", "\"" + optionalName + "\" property was found, but test double only knows how to replace functions, constructors, & objects containing functions (its value was " + (stringifyAnything(realThing)) + ").");
    }
  };

}).call(this);
