// Generated by CoffeeScript 1.11.1
(function() {
  var _, argsMatch, callHistory, store;

  _ = require('../util/lodash-wrap');

  store = require('./index');

  argsMatch = require('./../args-match');

  callHistory = [];

  store.onReset(function() {
    return callHistory = [];
  });

  module.exports = {
    log: function(testDouble, args, context) {
      store["for"](testDouble).calls.push({
        args: args,
        context: context
      });
      return callHistory.push({
        testDouble: testDouble,
        args: args,
        context: context
      });
    },
    pop: function() {
      return _.tap(callHistory.pop(), function(call) {
        if (call != null) {
          return store["for"](call.testDouble).calls.pop();
        }
      });
    },
    wasInvoked: function(testDouble, args, config) {
      var matchingInvocationCount;
      matchingInvocationCount = this.where(testDouble, args, config).length;
      if (config.times != null) {
        return matchingInvocationCount === config.times;
      } else {
        return matchingInvocationCount > 0;
      }
    },
    where: function(testDouble, args, config) {
      return _.filter(store["for"](testDouble).calls, function(call) {
        return argsMatch(args, call.args, config);
      });
    },
    "for": function(testDouble) {
      return store["for"](testDouble).calls;
    }
  };

}).call(this);
