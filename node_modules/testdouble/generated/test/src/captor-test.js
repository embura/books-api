// Generated by CoffeeScript 1.11.1
(function() {
  describe('argument captors (a special sub-type of matchers)', function() {
    Given(function() {
      return this.testDouble = td["function"]();
    });
    Given(function() {
      return this.captor = td.matchers.captor();
    });
    describe('when stubbing', function() {
      Given(function() {
        return td.when(this.testDouble(this.captor.capture())).thenReturn('foobaby');
      });
      When(function() {
        return this.stubbing = this.testDouble("PANTS!");
      });
      Then(function() {
        return this.captor.value === "PANTS!";
      });
      return And(function() {
        return this.stubbing === 'foobaby';
      });
    });
    describe('when verifying', function() {
      Given(function() {
        return this.testDouble("SHIRTS!");
      });
      When(function() {
        return td.verify(this.testDouble(this.captor.capture()));
      });
      Then(function() {
        return this.captor.value === "SHIRTS!";
      });
      return And(function() {
        return expect(this.captor.values).to.deep.eq(["SHIRTS!"]);
      });
    });
    return describe('when verifying multiple', function() {
      Given(function() {
        return this.testDouble("SHIRTS!");
      });
      And(function() {
        return this.testDouble("SHIRTS AGAIN!");
      });
      When(function() {
        return td.verify(this.testDouble(this.captor.capture()));
      });
      Then(function() {
        return this.captor.value === "SHIRTS AGAIN!";
      });
      return And(function() {
        return expect(this.captor.values).to.deep.eq(["SHIRTS!", "SHIRTS AGAIN!"]);
      });
    });
  });

}).call(this);
