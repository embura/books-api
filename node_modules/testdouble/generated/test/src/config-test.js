// Generated by CoffeeScript 1.11.1
(function() {
  describe('td.config', function() {
    context('defaults', function() {
      Given(function() {
        return this.config = td.config();
      });
      return Then(function() {
        return expect(this.config).to.deep.equal({
          promiseConstructor: global.Promise,
          ignoreWarnings: false,
          suppressErrors: false
        });
      });
    });
    context('overriding', function() {
      Given(function() {
        return this.config = td.config({
          ignoreWarnings: true
        });
      });
      Then(function() {
        return this.config.ignoreWarnings === true;
      });
      return And(function() {
        return td.config().ignoreWarnings === true;
      });
    });
    return context('overriding a non-existent property', function() {
      Given(function() {
        var e;
        try {
          return this.config = td.config({
            wat: 'wat?'
          });
        } catch (error) {
          e = error;
          return this.error = e;
        }
      });
      return Then(function() {
        return this.error.message === 'Error: testdouble.js - td.config - "wat" is not a valid configuration key (valid keys are: ["promiseConstructor", "ignoreWarnings", "suppressErrors"])';
      });
    });
  });

}).call(this);
